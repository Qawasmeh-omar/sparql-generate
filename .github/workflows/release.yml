name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Get tag name
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/v}
        run: echo ::set-output name=prerelease::$( [[ -z ${GITHUB_REF#refs/*/v*-SNAPSHOT} ]] && echo "true" || echo "false" )

      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run the Maven package phase
        run: mvn -B package --file sparql-generate-parent/pom.xml

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ steps.vars.outputs.prerelease }}

      - name: Upload Release Asset jar
        id: upload_jar 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sparql-generate-all/target/sparql-generate.jar
          asset_name: sparql-generate-${{ steps.vars.outputs.tag }}.jar
          asset_content_type: application/java-archive

      - name: Upload Release Asset javadoc
        id: upload_javadoc 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sparql-generate-all/target/sparql-generate-all-${{ steps.vars.outputs.tag }}-javadoc.jar
          asset_name: sparql-generate-${{ steps.vars.outputs.tag }}-javadoc.jar
          asset_content_type: application/java-archive
          
      - name: upload apidocs
        id: scp_apidocs_javadoc 
        uses: garygrossgarten/github-action-scp@release
        with:
          recursive: true
          local: "sparql-generate-all/target/apidocs"
          remote: "~/website/apidocs"
          host: ci.mines-stetienne.fr
          username: ${{ secrets.CI_USER }}
          key: ${{ secrets.CI_KEY }}
          
      - name: upload war
        id: scp_apidocs_javadoc 
        uses: garygrossgarten/github-action-scp@release
        with:
          local: "sparql-generate-server/target/sparql-generate.war"
          remote: "~/sparql-generate.war"
          host: ci.mines-stetienne.fr
          username: ${{ secrets.CI_USER }}
          key: ${{ secrets.CI_KEY }}

      - name: update server
        uses: appleboy/ssh-action@master
        with:
          host: ci.mines-stetienne.fr
          username: ${{ secrets.CI_USER }}
          key: ${{ secrets.CI_KEY }}
          script: sudo ./update-app
